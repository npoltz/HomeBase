@model SensorDataViewModel
@{
    ViewData["Title"] = "Sensor Data";
}

<script src="~/js/moment.min.js"></script>
<script src="~/js/Chart.min.js"></script>
<div class="text-center">
    <h1 class="display-4">Humidor Readings</h1>
    <canvas id="myChart" style="margin:0" width="400" height="200"></canvas>
    <script>
        var chartCanvas = document.getElementById("myChart");

        Chart.defaults.global.defaultFontFamily = "Lato";
        Chart.defaults.global.defaultFontSize = 18;

        function buildChart(data) {
            var timeStampLabels = data.map(function (e) {
                return e.timestamp;
            });
            var temperatureData = data.map(function (e) {
                return e.temperature;
            });
            var humidityData = data.map(function (e) {
                return e.relativeHumidity;
            });

            var sensorData = {
                labels: timeStampLabels,
                datasets: [{
                    borderColor: 'tomato',
                    label: "Temperature",
                    yAxisID: 'temperatureAxis',
                    data: temperatureData,
                    fill: false
                },
                {
                    borderColor: 'paleturquoise',
                    label: "Humidity",
                    yAxisID: 'humidityAxis',
                    data: humidityData,
                    fill: false
                }]
            };

            var chartOptions = {
                legend: {
                    display: false,
                    position: 'top',
                    labels: {
                        boxWidth: 80,
                        fontColor: 'black'
                    }
                },
                scales: {
                    xAxes: [{
                        type: "time",
                        time: {
                            unit: 'hour',
                            unitStepSize: 10,
                            round: 'minute',
                            tooltipFormat: "YYYY-MM-DD hh:mm:ss a",
                            displayFormats: {
                                hour: 'MM-DD HH:mm'
                            }
                        }
                    }],
                    yAxes: [{
                        scaleFontSize: 10,
                        id: 'temperatureAxis',
                        position: 'left',
                        ticks: {
                            suggestedMin: 0,
                            suggestedMax: 40
                        },
                        scaleLabel: {
                            display: true,
                            labelString: "Temperature"
                        }
                    },
                    {
                        scaleFontSize: 10,
                        id: 'humidityAxis',
                        position: 'right',
                        ticks: {
                            suggestedMin: 0,
                            suggestedMax: 100
                        },
                        scaleLabel: {
                            display: true,
                            labelString: "Relative Humidity"
                        }
                    }]
                }
            };

            new Chart(chartCanvas, {
                type: 'line',
                data: sensorData,
                options: chartOptions
            });
        };

        var sensorData = JSON.parse(@Html.Raw(Json.Serialize(@Model.GetSensorData("s01"))));
        console.log(sensorData);
        buildChart(sensorData);
    </script>
</div>
